{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalaj\\\\Desktop\\\\Assessments\\\\Pomodoro-Timer-Project\\\\src\\\\pomodoro\\\\SessionView.js\";\nimport React from \"react\";\nimport ProgressBarDisplay from \"./ProgressBarDisplay\";\n\nfunction SessionView({\n  session,\n  focusDuration,\n  breakView,\n  focusView,\n  breakDuration\n}) {\n  if (session) {\n    const seconds = session.timeRemaining % 60;\n    let formattedSecs = \"\";\n\n    if (seconds < 10) {\n      formattedSecs = [\"0\", seconds].slice(-2).join(\"\");\n    } else {\n      formattedSecs = seconds;\n    }\n\n    const minutesSeconds = Math.floor(session.timeRemaining / 60) + \":\" + formattedSecs;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, session.label, \" for \", session.label === \"Focusing\" ? focusView : breakView, \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, minutesSeconds, \" remaining\"))), /*#__PURE__*/React.createElement(ProgressBarDisplay, {\n      session: session,\n      focusDuration: focusDuration,\n      breakDuration: breakDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    return null;\n  }\n}\n\nexport default SessionView;","map":{"version":3,"sources":["C:/Users/kalaj/Desktop/Assessments/Pomodoro-Timer-Project/src/pomodoro/SessionView.js"],"names":["React","ProgressBarDisplay","SessionView","session","focusDuration","breakView","focusView","breakDuration","seconds","timeRemaining","formattedSecs","slice","join","minutesSeconds","Math","floor","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAGA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,SAA1B;AAAqCC,EAAAA,SAArC;AAAgDC,EAAAA;AAAhD,CAArB,EAAsF;AACpF,MAAIJ,OAAJ,EAAa;AACb,UAAMK,OAAO,GAAGL,OAAO,CAACM,aAAR,GAAwB,EAAxC;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAIF,OAAO,GAAG,EAAd,EAAkB;AAAEE,MAAAA,aAAa,GAAI,CAAC,GAAD,EAAMF,OAAN,EAAeG,KAAf,CAAqB,CAAC,CAAtB,CAAD,CAA2BC,IAA3B,CAAgC,EAAhC,CAAhB;AAAqD,KAAzE,MAA+E;AAAEF,MAAAA,aAAa,GAAGF,OAAhB;AAAyB;;AAC1G,UAAMK,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACM,aAAR,GAAwB,EAAnC,IAAyC,GAAzC,GAA+CC,aAAtE;AACA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,OAAO,CAACa,KADX,WACuBb,OAAO,CAACa,KAAR,KAAkB,UAAlB,GAA+BV,SAA/B,GAA2CD,SADlE,gBAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,cADH,eANF,CADF,CADF,eAaE,oBAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEV,OAA7B;AAAsC,MAAA,aAAa,EAAEC,aAArD;AAAoE,MAAA,aAAa,EAAEG,aAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADA;AAiBC,GAtBD,MAsBO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeL,WAAf","sourcesContent":["import React from \"react\"\r\nimport ProgressBarDisplay from \"./ProgressBarDisplay\"\r\n\r\n\r\nfunction SessionView({ session, focusDuration, breakView, focusView, breakDuration }) {\r\n  if (session) {\r\n  const seconds = session.timeRemaining % 60\r\n  let formattedSecs = \"\"\r\n  if (seconds < 10) { formattedSecs = ([\"0\", seconds].slice(-2)).join(\"\") } else { formattedSecs = seconds }\r\n  const minutesSeconds = Math.floor(session.timeRemaining / 60) + \":\" + formattedSecs \r\n  return (\r\n  <div>\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n        <h2 data-testid=\"session-title\">\r\n          {session.label} for {session.label === \"Focusing\" ? focusView : breakView }:00 minutes\r\n        </h2>\r\n        {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {minutesSeconds} remaining\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <ProgressBarDisplay session={session} focusDuration={focusDuration} breakDuration={breakDuration}/>\r\n  </div>\r\n  )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default SessionView;\r\n"]},"metadata":{},"sourceType":"module"}