{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalaj\\\\Desktop\\\\Assessments\\\\Pomodoro-Timer-Project\\\\src\\\\pomodoro\\\\ProgressBarDisplay.js\";\nimport React from \"react\";\n\nfunction ProgressBarDisplay({\n  breakDuration,\n  focusDuration,\n  session\n}) {\n  let totalTime = focusDuration * 60;\n\n  if (session.label !== \"Focusing\") {\n    totalTime = breakDuration * 60;\n  }\n\n  const timeRemaining = session.timeRemaining;\n  let percent = 100 - timeRemaining / totalTime * 100;\n  const widthStyle = {\n    \"width\": `${percent}%`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    style: widthStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ProgressBarDisplay;","map":{"version":3,"sources":["C:/Users/kalaj/Desktop/Assessments/Pomodoro-Timer-Project/src/pomodoro/ProgressBarDisplay.js"],"names":["React","ProgressBarDisplay","breakDuration","focusDuration","session","totalTime","label","timeRemaining","percent","widthStyle","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,CAA5B,EAAuE;AAErE,MAAIC,SAAS,GAAGF,aAAa,GAAG,EAAhC;;AACA,MAAIC,OAAO,CAACE,KAAR,KAAkB,UAAtB,EAAkC;AAAED,IAAAA,SAAS,GAAGH,aAAa,GAAG,EAA5B;AAA+B;;AACnE,QAAMK,aAAa,GAAGH,OAAO,CAACG,aAA9B;AACA,MAAIC,OAAO,GAAG,MAAQD,aAAa,GAAGF,SAAjB,GAA8B,GAAnD;AACA,QAAMI,UAAU,GAAG;AAAE,aAAU,GAAED,OAAQ;AAAtB,GAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeF,OALjB;AAME,IAAA,KAAK,EAAEC,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAgBD;;AAED,eAAeR,kBAAf","sourcesContent":["import React from \"react\"\r\n\r\n\r\nfunction ProgressBarDisplay({ breakDuration, focusDuration, session }) {\r\n  \r\n  let totalTime = focusDuration * 60  \r\n  if (session.label !== \"Focusing\") { totalTime = breakDuration * 60}\r\n  const timeRemaining = session.timeRemaining\r\n  let percent = 100 - ((timeRemaining / totalTime) * 100)\r\n  const widthStyle = { \"width\": `${percent}%`}\r\n\r\n  return (\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\" \r\n            aria-valuemax=\"100\"\r\n            aria-valuenow={percent}\r\n            style={widthStyle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressBarDisplay;"]},"metadata":{},"sourceType":"module"}