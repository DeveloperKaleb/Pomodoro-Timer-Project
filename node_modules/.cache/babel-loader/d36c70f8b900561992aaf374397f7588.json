{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalaj\\\\Desktop\\\\Assessments\\\\Pomodoro-Timer-Project\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport SessionView from \"./SessionView\";\nimport StopButton from \"./StopButton\"; // These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\r\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // State declarations and functions for focus duration adjustment\n\n  const [focusDuration, setFocusDuration] = useState(25);\n\n  const focusDurationIncreaseHandler = () => {\n    if (focusDuration < 60) {\n      setFocusDuration(prevDuration => prevDuration + 5);\n    }\n  };\n\n  const focusDurationDecreaseHandler = () => {\n    if (focusDuration > 5) {\n      setFocusDuration(prevDuration => prevDuration - 5);\n    }\n  }; // State declarations and functions for break duration adjustment\n\n\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  const breakDurationIncreaseHandler = () => {\n    if (breakDuration < 15) {\n      setBreakDuration(prevDuration => prevDuration + 1);\n    }\n  };\n\n  const breakDurationDecreaseHandler = () => {\n    if (breakDuration > 1) {\n      setBreakDuration(prevDuration => prevDuration - 1);\n    }\n  }; // Formatting code for focus and break duration display\n\n\n  let breakView = \"\";\n\n  if (breakDuration < 10) {\n    breakView = [\"0\", breakDuration].slice(-2);\n  } else {\n    breakView = breakDuration;\n  }\n\n  let focusView = \"\";\n\n  if (focusDuration < 10) {\n    focusView = [\"0\", focusDuration].slice(-2);\n  } else {\n    focusView = focusDuration;\n  }\n  /**\r\n   * Custom hook that invokes the callback function every second\r\n   *\r\n   * NOTE: You won't need to make changes to the callback function\r\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      console.log(\"We finished.\");\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    console.log(1);\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\r\n   * Called whenever the play/pause button is clicked.\r\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        console.log(2);\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stopSession() {\n    setSession(null);\n    setIsTimerRunning(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", focusView, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: focusDurationDecreaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: focusDurationIncreaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakView, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: breakDurationDecreaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: breakDurationIncreaseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StopButton, {\n    session: session,\n    stopSession: stopSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(SessionView, {\n    session: session,\n    focusDuration: focusDuration,\n    breakView: breakView,\n    focusView: focusView,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/kalaj/Desktop/Assessments/Pomodoro-Timer-Project/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","SessionView","StopButton","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","focusDurationIncreaseHandler","prevDuration","focusDurationDecreaseHandler","setBreakDuration","breakDurationIncreaseHandler","breakDurationDecreaseHandler","breakView","slice","focusView","Audio","play","console","log","playPause","nextState","prevStateSession","stopSession","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport SessionView from \"./SessionView\"\r\nimport StopButton from \"./StopButton\"\r\n\r\n// These functions are defined outside of the component to ensure they do not have access to state\r\n// and are, therefore, more likely to be pure.\r\n\r\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\r\nfunction nextTick(prevState) {\r\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\r\n  return {\r\n    ...prevState,\r\n    timeRemaining,\r\n  };\r\n}\r\n\r\n/**\r\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\r\nfunction nextSession(focusDuration, breakDuration) {\r\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\r\n  return (currentSession) => {\r\n    if (currentSession.label === \"Focusing\") {\r\n      return {\r\n        label: \"On Break\",\r\n        timeRemaining: breakDuration * 60,\r\n      };\r\n    }\r\n    return {\r\n      label: \"Focusing\",\r\n      timeRemaining: focusDuration * 60,\r\n    };\r\n  };\r\n}\r\n\r\nfunction Pomodoro() {\r\n  // Timer starts out paused\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  // The current session - null where there is no session running\r\n  const [session, setSession] = useState(null);\r\n\r\n  // State declarations and functions for focus duration adjustment\r\n  const [focusDuration, setFocusDuration] = useState(25);\r\n  const focusDurationIncreaseHandler = () => {\r\n    if (focusDuration < 60) {\r\n      setFocusDuration((prevDuration) => prevDuration + 5)\r\n    }\r\n  }\r\n  const focusDurationDecreaseHandler = () => {   \r\n    if (focusDuration > 5) {\r\n      setFocusDuration((prevDuration) => prevDuration - 5)\r\n    }\r\n  }\r\n  // State declarations and functions for break duration adjustment\r\n  const [breakDuration, setBreakDuration] = useState(5);\r\n  const breakDurationIncreaseHandler = () => {\r\n    if (breakDuration < 15) {\r\n      setBreakDuration((prevDuration) => prevDuration + 1)\r\n    }\r\n  }\r\n  const breakDurationDecreaseHandler = () => {   \r\n    if (breakDuration > 1) {\r\n      setBreakDuration((prevDuration) => prevDuration - 1)\r\n    }\r\n  }\r\n  // Formatting code for focus and break duration display\r\n  let breakView = \"\";\r\n  if (breakDuration < 10) { \r\n    breakView = [\"0\", breakDuration].slice(-2) \r\n  } else {\r\n    breakView = breakDuration\r\n  }\r\n  let focusView = \"\";\r\n  if (focusDuration < 10) { \r\n    focusView = [\"0\", focusDuration].slice(-2) \r\n  } else {\r\n    focusView = focusDuration\r\n  }\r\n  /**\r\n   * Custom hook that invokes the callback function every second\r\n   *\r\n   * NOTE: You won't need to make changes to the callback function\r\n   */\r\n  useInterval(() => {\r\n      if (session.timeRemaining === 0) {\r\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\r\n        console.log(\"We finished.\")\r\n        return setSession(nextSession(focusDuration, breakDuration));\r\n      }\r\n      console.log(1)\r\n      return setSession(nextTick);\r\n    },\r\n    isTimerRunning ? 1000 : null\r\n  );\r\n\r\n  /**\r\n   * Called whenever the play/pause button is clicked.\r\n   */\r\n  function playPause() {\r\n    setIsTimerRunning((prevState) => {\r\n      const nextState = !prevState;\r\n      if (nextState) {\r\n        console.log(2)\r\n        setSession((prevStateSession) => {\r\n          // If the timer is starting and the previous session is null,\r\n          // start a focusing session.\r\n          if (prevStateSession === null) {\r\n            return {\r\n              label: \"Focusing\",\r\n              timeRemaining: focusDuration * 60,\r\n            };\r\n          }\r\n          return prevStateSession;\r\n        });\r\n      }\r\n      return nextState;\r\n    });\r\n  }\r\n\r\n  function stopSession() {\r\n    setSession(null)\r\n    setIsTimerRunning(false)\r\n  }\r\n\r\n    \r\n  return (\r\n    <div className=\"pomodoro\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n              Focus Duration: {focusView}:00\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-focus\"\r\n                onClick={focusDurationDecreaseHandler}\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-focus\"\r\n                onClick={focusDurationIncreaseHandler}\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                Break Duration: {breakView}:00\r\n              </span>\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-break\"\r\n                  onClick={breakDurationDecreaseHandler}\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"increase-break\"\r\n                  onClick={breakDurationIncreaseHandler}\r\n                >\r\n                  <span className=\"oi oi-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\r\n            {/* TODO: Disable the stop button when there is no active session */}\r\n            <StopButton session={session} stopSession={stopSession}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SessionView session={session} focusDuration={focusDuration} breakView={breakView} focusView={focusView} breakDuration={breakDuration} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n"]},"metadata":{},"sourceType":"module"}